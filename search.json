[
  {
    "objectID": "course/1_introR.html",
    "href": "course/1_introR.html",
    "title": "Introduction to R programming",
    "section": "",
    "text": "RStudio is an integrated development environment (IDE) for R. It provides a user-friendly interface for coding, debugging, and data analysis. We use RStudio for its convenience and powerful features.\n\n\n\nConsole: Where you can directly type and execute R commands.\nScript Editor: Where you write and save your R scripts.\nEnvironment and History: Displays objects in your workspace and your command history.\nFiles and Plots: Helps manage files and view plots.\nPackages: Shows installed packages and allows you to install and load new ones.",
    "crumbs": [
      "Course",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "course/1_introR.html#interface-orientation",
    "href": "course/1_introR.html#interface-orientation",
    "title": "Introduction to R programming",
    "section": "",
    "text": "Console: Where you can directly type and execute R commands.\nScript Editor: Where you write and save your R scripts.\nEnvironment and History: Displays objects in your workspace and your command history.\nFiles and Plots: Helps manage files and view plots.\nPackages: Shows installed packages and allows you to install and load new ones.",
    "crumbs": [
      "Course",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "course/1_introR.html#numeric",
    "href": "course/1_introR.html#numeric",
    "title": "Introduction to R programming",
    "section": "Numeric",
    "text": "Numeric\n# Numeric variable\nnum_var &lt;- 10\nprint(num_var)  # Output: 10\n\n# Arithmetic operations\nresult &lt;- num_var * 2\nprint(result)  # Output: 20",
    "crumbs": [
      "Course",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "course/1_introR.html#character",
    "href": "course/1_introR.html#character",
    "title": "Introduction to R programming",
    "section": "Character",
    "text": "Character\n# Character variable\nchar_var &lt;- \"Hello, World!\"\nprint(char_var)  # Output: Hello, World!\n\n# Concatenation\nnew_string &lt;- paste(char_var, \"This is R programming.\")\nprint(new_string)  # Output: Hello, World! This is R programming.",
    "crumbs": [
      "Course",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "course/1_introR.html#integer",
    "href": "course/1_introR.html#integer",
    "title": "Introduction to R programming",
    "section": "Integer",
    "text": "Integer\n# Integer variable\nint_var &lt;- 20L  # The 'L' suffix indicates an integer\nprint(int_var)  # Output: 20\n\n# Integer arithmetic\nresult &lt;- int_var / 5\nprint(result)  # Output: 4",
    "crumbs": [
      "Course",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "course/1_introR.html#logical",
    "href": "course/1_introR.html#logical",
    "title": "Introduction to R programming",
    "section": "Logical",
    "text": "Logical\n# Logical variable\nlogical_var &lt;- TRUE\nprint(logical_var)  # Output: TRUE\n\n# Logical operations\nresult &lt;- logical_var & FALSE\nprint(result)  # Output: FALSE\n\n\n# Logical operations\na &lt;- TRUE\nb &lt;- FALSE\n\n# AND operation\nresult_and &lt;- a & b\nprint(result_and)  # Output: FALSE\n\n# OR operation\nresult_or &lt;- a | b\nprint(result_or)   # Output: TRUE\n\n# NOT operation\nresult_not &lt;- !a\nprint(result_not)  # Output: FALSE\n\n# Comparison operators\nx &lt;- 5\ny &lt;- 10\n\n# Greater than\nresult_gt &lt;- x &gt; y\nprint(result_gt)  # Output: FALSE\n\n# Less than\nresult_lt &lt;- x &lt; y\nprint(result_lt)  # Output: TRUE\n\n# Equal to\nresult_eq &lt;- x == y\nprint(result_eq)  # Output: FALSE\n\n# Not equal to\nresult_neq &lt;- x != y\nprint(result_neq)  # Output: TRUE",
    "crumbs": [
      "Course",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "course/1_introR.html#while",
    "href": "course/1_introR.html#while",
    "title": "Introduction to R programming",
    "section": "While",
    "text": "While\n# Example of a while loop\nx &lt;- 1\nwhile (x &lt;= 5) {\n  print(x)\n  x &lt;- x + 1\n}",
    "crumbs": [
      "Course",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "course/1_introR.html#for",
    "href": "course/1_introR.html#for",
    "title": "Introduction to R programming",
    "section": "For",
    "text": "For\n# Example of a for loop\nfor (i in 1:5) {\n  print(i)\n}",
    "crumbs": [
      "Course",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "course/1_introR.html#selecting-columns",
    "href": "course/1_introR.html#selecting-columns",
    "title": "Introduction to R programming",
    "section": "Selecting Columns",
    "text": "Selecting Columns\nSelecting columns allows you to choose specific columns from your dataset. It helps you focus on the variables of interest and ignore the rest.\nselected_data &lt;- select(tidy_data, ID, Math)\nprint(selected_data)",
    "crumbs": [
      "Course",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "course/1_introR.html#filtering-rows",
    "href": "course/1_introR.html#filtering-rows",
    "title": "Introduction to R programming",
    "section": "Filtering Rows",
    "text": "Filtering Rows\nFiltering rows allows you to subset your dataset based on specific conditions. It helps you extract only the rows that meet certain criteria.\n# Filtering rows based on conditions\nfiltered_data &lt;- filter(tidy_data, Math &gt; 90)\nprint(filtered_data)",
    "crumbs": [
      "Course",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "course/1_introR.html#summarizing-data",
    "href": "course/1_introR.html#summarizing-data",
    "title": "Introduction to R programming",
    "section": "Summarizing Data",
    "text": "Summarizing Data\nSummarizing data involves calculating summary statistics or aggregating data to get a concise overview of your dataset. It helps you understand the overall characteristics of your data.\nsummary_data &lt;- summarize(tidy_data, \n                          Mean_Math = mean(Math), \n                          Mean_Science = mean(Science))\nprint(summary_data)",
    "crumbs": [
      "Course",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "course/1_introR.html#sorting-arranging",
    "href": "course/1_introR.html#sorting-arranging",
    "title": "Introduction to R programming",
    "section": "Sorting (Arranging)",
    "text": "Sorting (Arranging)\nArranging rows involves sorting your dataset based on the values of one or more columns. It helps you reorder your data for better visualization or analysis.\narranged_data &lt;- arrange(tidy_data, desc(Math))\nprint(arranged_data)",
    "crumbs": [
      "Course",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "course/1_introR.html#long-and-wide-data-formats",
    "href": "course/1_introR.html#long-and-wide-data-formats",
    "title": "Introduction to R programming",
    "section": "Long and Wide Data Formats",
    "text": "Long and Wide Data Formats\nLong and wide data formats are two common ways of structuring data, each with its own advantages and use cases.\n\nLong Format\nIn the long format, also known as the “tidy” format, each observation is represented by a single row in the dataset. This format is characterized by having: - Multiple rows, each corresponding to a single observation or measurement. - One column for the variable being measured. - Additional columns to store metadata or grouping variables.\nAdvantages: - Facilitates easy analysis and manipulation, especially when using tools like Tidyverse packages in R. - Suitable for data that follow the “one observation per row” principle, such as time series or longitudinal data.\nExample: | Subject | Time | Measurement | |———|——|————-| | A | 1 | 10 | | A | 2 | 15 | | B | 1 | 12 | | B | 2 | 18 |\n\n\nWide Format\nIn the wide format, each observation is represented by a single row, but with multiple columns corresponding to different variables. This format is characterized by: - One row per observation. - Each variable is represented by a separate column.\nAdvantages: - Can be easier to understand for simple datasets with few variables. - May be more convenient for certain types of analysis or visualization.\nExample: | Subject | Time1 | Time2 | |———|——-|——-| | A | 10 | 15 | | B | 12 | 18 |\n\n\nChoosing Between Long and Wide Formats\nThe choice between long and wide formats depends on factors such as the nature of the data, the analysis tasks, and personal preference. Long format is often preferred for its flexibility and compatibility with modern data analysis tools, while wide format may be suitable for simpler datasets or specific analysis requirements.",
    "crumbs": [
      "Course",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "course/1_introR.html#long-to-wide",
    "href": "course/1_introR.html#long-to-wide",
    "title": "Introduction to R programming",
    "section": "Long to Wide",
    "text": "Long to Wide\nlibrary(tidyr)\n\n# Example long format data\nlong_data &lt;- data.frame(\n  Subject = c(\"A\", \"A\", \"B\", \"B\"),\n  Time = c(1, 2, 1, 2),\n  Measurement = c(10, 15, 12, 18)\n)\n\n# Convert long format data to wide format\nwide_data &lt;- spread(long_data, key = Time, value = Measurement)\n\n# View the wide format data\nprint(wide_data)",
    "crumbs": [
      "Course",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "course/1_introR.html#wide-to-long",
    "href": "course/1_introR.html#wide-to-long",
    "title": "Introduction to R programming",
    "section": "Wide to Long",
    "text": "Wide to Long\nlibrary(tidyr)\n\n# Example wide format data\nwide_data &lt;- data.frame(\n  Subject = c(\"A\", \"B\"),\n  Time1 = c(10, 12),\n  Time2 = c(15, 18)\n)\n\n# Convert wide format data to long format\nlong_data &lt;- gather(wide_data, key = Time, value = Measurement, -Subject)\n\n# View the long format data\nprint(long_data)",
    "crumbs": [
      "Course",
      "Introduction to R programming"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "CRI Bioinformatics Workshop 2024",
    "section": "",
    "text": "Welcome to the Cancer Research Institute Bioinformatics Bootcamp!"
  },
  {
    "objectID": "authors.html#instructors",
    "href": "authors.html#instructors",
    "title": "Authors",
    "section": "Instructors",
    "text": "Instructors"
  },
  {
    "objectID": "authors.html#teaching-assistants",
    "href": "authors.html#teaching-assistants",
    "title": "Authors",
    "section": "Teaching Assistants",
    "text": "Teaching Assistants"
  },
  {
    "objectID": "course.html",
    "href": "course.html",
    "title": "Course overview",
    "section": "",
    "text": "R Workshop (Days 1-2)\n\nIntroduction to R programming\nBasic plotting and statistics\nStatistics in R and ggpubr\nWorking with Seurat objects\nClustering methods\nBatch effects, QC, and troubleshooting\n\n\n\nBulk DNA/RNA sequencing (Day 3)\n\n\nSingle cell RNA sequencing (Days 4-5)\n\n\nImaging (Day 6)"
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "The inaugural CRI Bioinformatics Bootcamp will take place April 27, 2024-May 2, 2024 at the Hilton Bonnett Creek, Orlando FL.\n\n\n\n\n\n\n\n\n\n\nDay\nTime\nDuration\nModule\nTopic\n\n\n\n\n1\n9:00AM-9:30AM\n0:30\nR Workshop\nIntroduction to R and RStudio\n\n\n\n9:45AM-12:00PM\n2:15\n\nHands-on: Reading, writing, and interpreting data structures\n\n\n\n12:00PM-1:00PM\n1:00\n\nLunch\n\n\n\n1:00PM-1:45PM\n0:45\n\nIntroduction to plotting and statistics\n\n\n\n2:00PM-4:30PM\n2:30\n\nHands-on: Plotting information from data structures for real-time analysis\n\n\n2\n9:00AM-9:30AM\n0:30\nR Workshop\nTypes of analysis: Clustering, correlation\n\n\n\n9:45AM-12:00PM\n2:15\n\nHands-on: Cell type clustering and cluster characterization\n\n\n\n12:00PM-1:00PM\n1:00\n\nLunch\n\n\n\n1:00PM-1:45PM\n0:45\n\nEvaluating batch effects and troubleshooting\n\n\n\n2:00PM-4:30PM\n2:30\n\nHands-on: Data normalization and controlling for batch effects in statistics\n\n\n3\n9:00AM-9:45AM\n0:45\nBulk DNA/RNA sequencing\nIntroduction to sequencing data processing and analysis\n\n\n\n10:00AM-12:00PM\n2:15\n\nHands-on: Exploring sequencing datasets and variant annotation\n\n\n\n12:00PM-1:00PM\n1:00\n\nLunch\n\n\n\n1:15PM-4:30PM\n3:15\n\nHands-on: Gene expression and pathway analysis in bulk RNAseq data\n\n\n4\n9:00AM-9:45AM\n0:45\nSingle cell RNA sequencing\nscRNAseq methods and analysis\n\n\n\n10:00AM-12:00PM\n2:00\n\nHands-on: QC, cell typing, and cluster analysis\n\n\n\n12:00PM-1:00PM\n1:00\n\nLunch\n\n\n\n1:15PM-2:00PM\n0:45\n\nGene expression and pathway analysis in scRNAseq data\n\n\n\n2:15PM-4:30PM\n2:15\n\nHands-on: Gene expression and pathway analysis in scRNAseq data\n\n\n5\n9:00AM-9:45AM\n0:45\nSingle cell RNA sequencing\nAdvanced analyses in scRNAseq and multi-omic integration\n\n\n\n10:00AM-12:00PM\n2:00\n\nHands-on: Cancer cell profiling, pseudotime analysis\n\n\n\n12:00PM-1:00PM\n1:00\n\nLunch\n\n\n\n1:15PM-4:30PM\n3:15\n\nHands-on: Interaction networks, TCR/BCR analysis\n\n\n6\n9:00AM-9:45AM\n0:45\nImaging\nTypes of imaging, experimental planning, and visualization platforms\n\n\n\n10:00AM-12:00PM\n2:00\n\nHands-on: Exploring public datasets\n\n\n\n12:00PM-1:00PM\n1:00\n\nLunch\n\n\n\n1:15PM-2:00PM\n0:45\n\nQuantifying spatial features from imaging data\n\n\n\n2:15PM-4:30PM\n2:15\n\nHands-on: Problem-based learning of spatial feature extraction\n\n\n\n4:30PM-5:00PM\n0:30\nConclusion\nClosing and feedback"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Resources",
    "section": "",
    "text": "Prerequisites\nThis workshop will utilize the R programmling language through the RStudio user interface. We will perform these activities on the RStudio Server, available through the Posit Cloud platform. - Posit Cloud account: You should have received access to Posit Cloud through a link to your email address. If you did not receive this link, please contact @ for a new one. Logging into the workspace, using this email address, will provide access to all course materials and allow for data analysis through RStudio Server on your internet browser. - Laptop computer: Please bring your own laptop with internet capability. Since the workshop will take place through Posit Cloud, the interface will be accessed through an internet browser. Google Chrome is recommended.\nWhile the Introduction to R programming (Days 1-2) is is designed for all skill levels, having a basic understanding of R programming may enhance your learning experience. If you are new to these areas, consider reviewing one or a few of the following introductory materials prior to the workshop.\n\n\nDuring the course\nOver the course of the workshop, teaching assistants (TAs) will be working with small groups of attendees during the hands-on exercises. Feel free to direct your questions to the them, the instructors, or the Slack channel.\n\n\nAfter the course\n\nR: In order to utilize the RStudio Desktop application from your laptop (and not through the browser), you will first need to install the latest version of R. [link]\nRStudio Desktop can be downloaded here [link]. Note that this functions in the same manner as the RStudio Server by Posit Cloud, but utilizes the storage and compute of the laptop machine itself. Laptops vary in memory and storage space, which can dictate the speed and capability of data analysis, and this may result in slower processes with large datasets.\n\n\n\nWorkshops and vignettes\n\nSingle Cell Best Practices\nRNA-seq Bioinformatics\nPrecision Medicine Bioinformatics\nOrchestrating Single-Cell Analysis with Bioconductor"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]